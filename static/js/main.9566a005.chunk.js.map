{"version":3,"sources":["utils/utils.js","components/gallery/gallery.jsx","constants/constants.js","components/header/header.jsx","components/loader/loader.jsx","components/upload/upload.jsx","pages/app/app.jsx","index.jsx"],"names":["handleUrl","url","callback","img","Image","onload","newPicture","width","this","height","src","addIdToItem","item","id","Math","random","toString","substr","fileHandler","file","type","URL","createObjectURL","json","fileReader","FileReader","readAsText","evt","values","JSON","parse","target","result","key","Object","prototype","hasOwnProperty","call","map","element","push","jsonHandler","Error","Gallery","props","className","draggable","onDragOver","preventDefault","onDrop","dataTransfer","items","files","forEach","addPicture","getData","images","image","ratio","widthBase","style","flexGrow","onClick","deletePicture","alt","Header","Loader","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","checkUrlRegEx","RegExp","Upload","useState","isLoading","setJsonLoader","fileRef","useRef","textRef","isFileError","setFileError","onFileInputHandler","current","length","e","value","classContainer","htmlFor","disabled","ref","placeholder","textPath","test","multiple","onChange","defaultProps","App","setImages","pictures","Array","isArray","prevState","idx","findIndex","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9566a005.chunk.js","sourcesContent":["/*\n* Обработчик для ссылок\n* Необходим получить ширину и высоту изображения, поэтому создаем new Image\n* */\nconst handleUrl = (url, callback) => {\n  const img = new Image();\n  img.onload = function () {\n    const newPicture = {\n      url,\n      width: this.width,\n      height: this.height,\n    };\n    callback(newPicture, 'url');\n  };\n\n  img.src = url;\n};\n\nconst jsonHandler = (json, callback) => {\n  const fileReader = new FileReader();\n  fileReader.readAsText(json, 'UTF-8');\n  fileReader.onload = ((evt) => {\n    const values = JSON.parse(evt.target.result);\n    const result = [];\n\n    // Проходим по json файлу, чтобы не быть привязанным к ключу galleryImages\n    for (const key in values) {\n      if (Object.prototype.hasOwnProperty.call(values, key)) {\n        values[key].map((element) => result.push(element));\n      }\n    }\n\n    // Вызываем callback функцию для добавления Json'a\n    callback(result, 'json');\n  });\n};\n\nconst createID = () => `_${Math.random().toString(36).substr(2, 9)}`;\n\nconst addIdToItem = (item) => ({ ...item, id: createID() });\n\nconst fileHandler = (file, callback) => {\n  switch (file.type) {\n    case 'image/jpeg':\n    case 'image/png':\n      handleUrl(URL.createObjectURL(file), callback);\n      break;\n    case 'application/json':\n      jsonHandler(file, callback);\n      break;\n    default:\n      throw new Error();\n  }\n};\n\nexport {\n  handleUrl, addIdToItem, fileHandler, jsonHandler,\n};\n","import React from 'react';\nimport './style/style.scss';\nimport PropTypes from 'prop-types';\nimport { handleUrl, fileHandler } from '../../utils/utils';\nimport BASE_IMAGE_HEIGHT from '../../constants/constants';\n\nconst Gallery = (props) => {\n  const handleDrop = (evt) => {\n    evt.preventDefault();\n\n    // Если мы делаем drag and drop уже существующего изображения (находится в галерее)\n    // text/uri-list - для macOC\n    if (evt.dataTransfer.items[0].type === 'text/plain' || evt.dataTransfer.items[0].type === 'text/uri-list') {\n      const url = evt.dataTransfer.getData('URL');\n      handleUrl(url, props.addPicture);\n      return;\n    }\n\n    evt.dataTransfer.files.forEach((file) => fileHandler(file, props.addPicture));\n  };\n  const createImage = (image) => {\n    const ratio = image.width / image.height;\n    const widthBase = ratio * BASE_IMAGE_HEIGHT;\n\n    return (\n      <div className=\"gallery__item\" style={{ flexGrow: ratio }} key={image.id}>\n        <span className=\"gallery__item-icon-close\" onClick={() => props.deletePicture(image.id)}>\n          <i className=\"fas fa-trash-alt\" />\n        </span>\n        <img\n          className=\"gallery__item-img\"\n          width={widthBase}\n          height={BASE_IMAGE_HEIGHT}\n          src={image.url}\n          alt=\"Изображение\"\n          style={{ flexGrow: 1 }}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div\n      className=\"gallery\"\n      draggable\n      onDragOver={(evt) => evt.preventDefault()}\n      onDrop={handleDrop}\n    >\n      {props.images && props.images.map(createImage)}\n    </div>\n  );\n};\n\nGallery.propTypes = {\n  addPicture: PropTypes.func.isRequired,\n  deletePicture: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    height: PropTypes.number,\n    id: PropTypes.string,\n    url: PropTypes.string,\n    width: PropTypes.number,\n  })).isRequired,\n};\n\nexport default Gallery;\n","const BASE_IMAGE_HEIGHT = 200;\n\nexport default BASE_IMAGE_HEIGHT;\n","import React from 'react';\nimport './style/style.scss';\n\nconst Header = () => (\n  <div className=\"header\">\n    <div className=\"content-wrapper header__content\">\n      <h1>Photo Gallery</h1>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport './style/style.scss';\n\nconst Loader = () => (\n  <div className=\"spinner\">\n    <svg\n      className=\"spinner__svg-icon\"\n      width=\"65px\"\n      height=\"65px\"\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        className=\"spinner__svg-path\"\n        fill=\"none\"\n        strokeWidth=\"6\"\n        strokeLinecap=\"round\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n      />\n    </svg>\n  </div>\n);\n\nexport default Loader;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { handleUrl, fileHandler } from '../../utils/utils';\nimport './style/style.scss';\nimport Loader from '../loader/loader';\n\n// Регулярка для проверки ссылки(начинается ли с http | https)\nconst checkUrlRegEx = new RegExp('^(http|https)://', 'i');\n\nconst Upload = (props) => {\n  const [isLoading, setJsonLoader] = useState(false);\n  const fileRef = useRef();\n  const textRef = useRef();\n  const [isFileError, setFileError] = useState(false);\n\n  const onTextInputHandler = () => {\n    const textPath = textRef.current.value;\n\n    if (textPath === '') {\n      return;\n    }\n    setJsonLoader(true);\n    const match = checkUrlRegEx.test(textPath);\n\n    if (match) {\n      handleUrl(textPath, props.addPicture);\n      textRef.current.value = '';\n    }\n\n    setJsonLoader(false);\n  };\n\n  const onFileInputHandler = (evt) => {\n    evt.preventDefault();\n    setJsonLoader(true);\n    const files = fileRef.current.files.length ? fileRef.current.files : evt.dataTransfer.files;\n\n    try {\n      setFileError(false);\n      files.forEach((file) => fileHandler(file, props.addPicture));\n    } catch (e) {\n      setFileError(true);\n    }\n\n    // Убираем файл, который был в input'e, чтобы устранить дублирование при drag & drop\n    fileRef.current.value = '';\n\n    // Меняем статус загрузки\n    setJsonLoader(false);\n  };\n\n  return (\n    <form className={`upload-block ${props.classContainer}`}>\n      {isLoading && <Loader />}\n      <div className=\"upload-block__field\">\n        <label className=\"upload-block__label\" htmlFor=\"url\">Введите url картинки</label>\n        <div className=\"upload-block__url\">\n          <input\n            disabled={isLoading}\n            ref={textRef}\n            className=\"upload-block__url-input\"\n            id=\"url\"\n            type=\"text\"\n            placeholder=\"http://\"\n          />\n          <button\n            className=\"upload-block__button\"\n            type=\"button\"\n            onClick={onTextInputHandler}\n            disabled={isLoading}\n          >\n            Загрузить\n          </button>\n        </div>\n      </div>\n      <div className=\"upload-block__field\">\n        <label className=\"upload-block__label\" htmlFor=\"file\">Загрузите файл</label>\n        <div\n          className=\"upload-block__drop-area\"\n          onDragOver={(evt) => evt.preventDefault()}\n          onDrop={onFileInputHandler}\n        >\n          <input\n            ref={fileRef}\n            disabled={isLoading}\n            className=\"upload-block__drop-area-input\"\n            type=\"file\"\n            id=\"file\"\n            multiple\n            onChange={onFileInputHandler}\n          />\n          <div className={`upload-block__drop-area-inner ${isFileError ? 'upload-block__drop-area-inner--error' : ''}`}>\n            <div>{isFileError ? 'Загрузите json, png или jpeg файл' : 'Загрузить'}</div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nUpload.defaultProps = {\n  classContainer: '',\n};\n\nUpload.propTypes = {\n  classContainer: PropTypes.string,\n  addPicture: PropTypes.func.isRequired,\n};\n\nexport default Upload;\n","import React, { useState } from 'react';\nimport Gallery from '../../components/gallery/gallery';\nimport Header from '../../components/header/header';\nimport Upload from '../../components/upload/upload';\nimport { addIdToItem } from '../../utils/utils';\n\nimport './style/style.scss';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n\n  const deletePicture = (id) => {\n    // Получаем индекс элемента, который надо удалить\n    const idx = images.findIndex((image) => image.id === id);\n    // Получаем новый массив без элемента\n    setImages(((prevState) => ([...prevState.slice(0, idx), ...prevState.slice(idx + 1)])));\n  };\n\n  const addPicture = (pictures) => {\n    // Если пришел массив(json файл), то обрабатываем как массив\n    const result = Array.isArray(pictures) ? pictures.map(addIdToItem) : addIdToItem(pictures);\n\n    setImages(((prevState) => {\n      // возвращаем результат в зависимости от того, является ли result объектом или массивом\n      return result instanceof Array ? [...prevState, ...result] : [...prevState, result];\n    }));\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"content-wrapper app__content\">\n        <Upload classContainer=\"app__upload-block\" addPicture={addPicture} />\n        <Gallery images={images} deletePicture={deletePicture} addPicture={addPicture} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './pages/app/app';\n\nimport './style/style.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}