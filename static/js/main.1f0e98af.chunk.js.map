{"version":3,"sources":["utils/utils.js","components/photo-gallery/photo-gallery.jsx","components/header/header.jsx","components/loader/loader.jsx","components/upload/upload.jsx","pages/app/app.jsx","index.jsx"],"names":["handleUrl","url","callback","img","Image","onload","newPicture","width","this","height","src","PhotoGallery","props","className","draggable","onDragOver","evt","preventDefault","onDrop","dataTransfer","items","type","i","length","URL","createObjectURL","getAsFile","addPicture","getData","images","map","image","ratio","widthBase","style","flexGrow","key","id","onClick","deletePicture","alt","Header","Loader","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","checkUrlRegEx","RegExp","Upload","useState","isLoading","setJsonLoader","fileRef","useRef","textRef","isFileError","setFileError","onFileInputHandler","file","current","files","json","fileReader","FileReader","readAsText","test","JSON","parse","target","result","Object","prototype","hasOwnProperty","call","element","push","handleJsonFile","value","classContainer","htmlFor","disabled","ref","placeholder","textPath","onChange","defaultProps","createID","Math","random","toString","substr","App","setImages","pictures","Array","isArray","picture","idx","findIndex","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f0e98af.chunk.js","sourcesContent":["/*\n* Обработчик для ссылок\n* Необходим получить ширину и высоту изображения, поэтому создаем new Image\n* */\nconst handleUrl = (url, callback) => {\n  const img = new Image();\n  img.onload = function () {\n    const newPicture = {\n      url,\n      width: this.width,\n      height: this.height,\n    };\n    callback(newPicture, 'url');\n  };\n\n  img.src = url;\n};\n\nexport default handleUrl;\n","import React from \"react\";\r\nimport './style/style.scss';\r\nimport PropTypes from 'prop-types';\r\nimport handleUrl from '../../utils/utils';\r\n\r\nconst PhotoGallery = (props) => {\r\n  const handleDrop = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    // Если мы делаем drag and drop уже существующего изображения (находится в галерее)\r\n    if (evt.dataTransfer.items[0].type === 'text/plain') {\r\n      const url = evt.dataTransfer.getData('URL');\r\n      handleUrl(url, props.addPicture);\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < evt.dataTransfer.items.length; i++) {\r\n      const url = URL.createObjectURL(evt.dataTransfer.items[i].getAsFile());\r\n      handleUrl(url, props.addPicture);\r\n    }\r\n  };\r\n  const createImage = (image) => {\r\n    const ratio = image.width / image.height;\r\n    const widthBase = ratio * 200;\r\n\r\n    return (\r\n      <div className=\"photo-gallery__item\" style={{ flexGrow: ratio }} key={image.id}>\r\n        <span className=\"photo-gallery__item-close\" onClick={() => props.deletePicture(image.id)}>\r\n          <i className=\"fas fa-trash-alt\" />\r\n        </span>\r\n        <img className=\"photo-gallery__item-img\" width={widthBase} height={200} src={image.url} alt=\"Изображение\" style={{ flexGrow: ratio }} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"photo-gallery\"\r\n      draggable\r\n      onDragOver={(evt) => evt.preventDefault()}\r\n      onDrop={handleDrop}\r\n    >\r\n      {props.images && props.images.map(createImage)}\r\n    </div>\r\n  );\r\n};\r\n\r\nPhotoGallery.propTypes = {\r\n  addPicture: PropTypes.func.isRequired,\r\n  deletePicture: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    height: PropTypes.number,\r\n    id: PropTypes.string,\r\n    url: PropTypes.string,\r\n    width: PropTypes.number,\r\n  })).isRequired,\r\n};\r\n\r\nexport default PhotoGallery;\r\n","import React from \"react\";\r\nimport './style/style.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"container header__container\">\r\n        <h1>Photo Gallery</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport './style/style.scss';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <svg className=\"spinner__circle\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle className=\"spinner__path\" fill=\"none\" strokeWidth=\"6\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport handleUrl from '../../utils/utils';\r\nimport './style/style.scss';\r\nimport Loader from '../loader/loader';\r\n\r\n// Регулярка для проверки ссылки(начинается ли с http | https)\r\nconst checkUrlRegEx = new RegExp('^(http|https)://', 'i');\r\n\r\nconst Upload = (props) => {\r\n  const [isLoading, setJsonLoader] = useState(false);\r\n  const fileRef = useRef();\r\n  const textRef = useRef();\r\n  const [isFileError, setFileError] = useState(false);\r\n\r\n  const handleJsonFile = (json, callback) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(json, 'UTF-8');\r\n    fileReader.onload = ((evt) => {\r\n      const test = JSON.parse(evt.target.result);\r\n      const result = [];\r\n\r\n      // Проходим по json файлу, чтобы не быть привязанным к ключу galleryImages\r\n      for (const key in test) {\r\n        if (Object.prototype.hasOwnProperty.call(test, key)) {\r\n          test[key].map((element) => result.push(element));\r\n        }\r\n      }\r\n\r\n      // Вызываем callback функцию для добавления Json'a\r\n      callback(result, 'json');\r\n    });\r\n  };\r\n\r\n  const onTextInputHandler = () => {\r\n    const textPath = textRef.current.value;\r\n\r\n    if (textPath === '') {\r\n      return;\r\n    }\r\n    setJsonLoader(true);\r\n    const match = checkUrlRegEx.test(textPath);\r\n\r\n    if (match) {\r\n      handleUrl(textPath, props.addPicture);\r\n      textRef.current.value = '';\r\n    }\r\n\r\n    setJsonLoader(false);\r\n  };\r\n\r\n  const onFileInputHandler = (evt) => {\r\n    evt.preventDefault();\r\n    setJsonLoader(true);\r\n    const file = fileRef.current.files[0] || evt.dataTransfer.items[0].getAsFile();\r\n\r\n    switch (file.type) {\r\n      case 'image/jpeg':\r\n      case 'image/png':\r\n        setFileError(false);\r\n        handleUrl(URL.createObjectURL(file), props.addPicture);\r\n        break;\r\n      case 'application/json':\r\n        setFileError(false);\r\n        handleJsonFile(file, props.addPicture);\r\n        break;\r\n      default:\r\n        setFileError(true);\r\n        break;\r\n    }\r\n\r\n    // Убираем файл, который был в input'e, чтобы устранить дублирование при drag & drop\r\n    fileRef.current.value = '';\r\n\r\n    // Меняем статус загрузки\r\n    setJsonLoader(false);\r\n  };\r\n\r\n  return (\r\n    <form className={`upload ${props.classContainer}`}>\r\n      <div>\r\n        {isLoading && <Loader />}\r\n        <div className=\"mb12\">\r\n          <label htmlFor=\"url\">Введите url картинки</label>\r\n          <div className=\"upload__text mt8\">\r\n            <input\r\n              disabled={isLoading}\r\n              ref={textRef}\r\n              className=\"upload__input-text\"\r\n              id=\"url\"\r\n              type=\"text\"\r\n              placeholder=\"http://\"\r\n            />\r\n            <button\r\n              className=\"upload__button\"\r\n              type=\"button\"\r\n              onClick={onTextInputHandler}\r\n              disabled={isLoading}\r\n            >\r\n              Загрузить\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"file\">Загрузите файл</label>\r\n          <div\r\n            className=\"upload__file mt8\"\r\n            onDragOver={(evt) => evt.preventDefault()}\r\n            onDrop={onFileInputHandler}\r\n          >\r\n            <input\r\n              ref={fileRef}\r\n              disabled={isLoading}\r\n              className=\"upload__file-input\"\r\n              type=\"file\"\r\n              id=\"file\"\r\n              onChange={onFileInputHandler}\r\n            />\r\n            <div className={`upload__file-wrapper ${isFileError ? 'upload__file-wrapper--error' : ''}`}>\r\n              <div>{isFileError ? 'Загрузите json, png или jpeg файл' : 'Загрузить'}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nUpload.defaultProps = {\r\n  classContainer: '',\r\n};\r\n\r\nUpload.propTypes = {\r\n  classContainer: PropTypes.string,\r\n  addPicture: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Upload;\r\n","import React, { useState } from 'react';\r\nimport PhotoGallery from '../../components/photo-gallery/photo-gallery';\r\nimport Header from '../../components/header/header';\r\nimport Upload from '../../components/upload/upload';\r\n\r\nimport './style/style.scss';\r\n\r\nconst createID = () => {\r\n  return `_${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\nconst App = () => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const deletePicture = (id) => {\r\n    // Получаем индекс элемента, который надо удалить\r\n    const idx = images.findIndex((image) => image.id === id);\r\n    // Получаем новый массив без элемента\r\n    setImages([...images.slice(0, idx), ...images.slice(idx + 1)]);\r\n  };\r\n\r\n  const addPicture = (pictures) => {\r\n    // Если пришел массив(json файл), то обрабатываем как массив\r\n    if (Array.isArray(pictures)) {\r\n      const result = pictures.map((picture) => {\r\n        return { ...picture, id: createID() };\r\n      });\r\n      setImages([...images, ...result]);\r\n    } else {\r\n      images.push({ ...pictures, id: createID() });\r\n      setImages([...images]);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <div className=\"container pt32\">\r\n        <Upload classContainer=\"m-auto\" addPicture={addPicture} />\r\n        <PhotoGallery images={images} deletePicture={deletePicture} addPicture={addPicture} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport ReactDOM from 'react-dom';\nimport App from './pages/app/app';\nimport React from \"react\";\n\nimport './style/style.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}